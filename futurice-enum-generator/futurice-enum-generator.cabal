name:           futurice-enum-generator
version:        0
synopsis:       Generate enum datatypes
description:    There're a lot of enum types. A lot of boilerplate.
category:       Development
homepage:       https://github.com/futurice/haskell-mega-repo#readme
bug-reports:    https://github.com/futurice/haskell-mega-repo/issues
author:         Oleg Grenrus <oleg.grenrus@iki.fi>
maintainer:     Oleg Grenrus <oleg.grenrus@iki.fi>
license:        BSD3
license-file:   LICENSE
tested-with:    GHC==8.0.2, GHC==8.2.2
build-type:     Simple
cabal-version:  1.12

extra-source-files:
  README.md

source-repository head
  type: git
  location: https://github.com/futurice/haskell-mega-repo

library
  default-language:    Haskell2010
  hs-source-dirs:      src
  exposed-modules:
    Futurice.App.EnumGenerator
  default-extensions:
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    ScopedTypeVariables
  ghc-options: -Wall
  build-depends:
    base >= 4.9 && <4.11,
    ansi-wl-pprint,
    bytestring,
    futurice-prelude,
    lattices,
    trifecta

executable futu-enum-gen
  default-language: Haskell2010
  main-is:          Main.hs
  hs-source-dirs:   cli
  ghc-options:      -Wall
  build-depends: base, bytestring, futurice-enum-generator

test-suite test
  default-language:    Haskell2010
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  hs-source-dirs:      test
  ghc-options:         -Wall -threaded
  build-depends:
    base,
    ansi-terminal,
    bytestring,
    Diff,
    filepath,
    futurice-enum-generator,
    futurice-prelude,
    tasty,
    tasty-golden
