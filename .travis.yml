dist: trusty
sudo: false
language: c

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.stack
  - $HOME/.local/bin
  - .stack-work/
  # packages' .stack-work
  - futurice-prelude/.stack-work/
  - ansi-pretty/.stack-work/
  # more packages
  - dynmap-cache/.stack-work
  - futurice-logo/.stack-work
  - futurice-pure-trans/.stack-work/
  - log-logentries/.stack-work/
  - mega-repo-tool/.stack-work
  - monad-http/.stack-work/
  - optparse-sop/.stack-work
  - periocron/.stack-work
  - servant-status/.stack-work/

before_cache:
- rm -rf $(stack --no-terminal --system-ghc --skip-ghc-check path --local-install-root)/bin/*

before_install:
# We use compiler: to tag caches
- unset CC
# job starting moment
- JOB_START_TIME=$(date +%s)
# path
- export PATH=/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$PATH
- export PATH=/opt/ghc/$GHCVER/bin:$PATH
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- if [ ! -e ~/.local/bin/stack ]; then
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
  fi
# Version infos
- stack +RTS -N1 -RTS --version
- ghc --version

# Disable hardening
# https://ghc.haskell.org/trac/ghc/ticket/9007
# https://wiki.debian.org/Hardening
- DEB_BUILD_MAINT_OPTIONS=hardening=-all
- dpkg-buildflags --get LDFLAGS
- dpkg-buildflags --get CFLAGS

install:
# Let's build in two steps, so `stack` won't consume too much memory!
# First we build only-dependencies of futurice-prelude
- JOB_CURR_TIME=$(date +%s)
- JOB_DURR=$((JOB_START_TIME + 4800 - JOB_CURR_TIME))
- echo time to run $JOB_DURR
- timeout $JOB_DURR stack +RTS -N2 -RTS --no-terminal --system-ghc --skip-ghc-check build --test --only-snapshot -j2 --ghc-options="-j2 +RTS -M1.5G -A128M -n4m -RTS" futurice-prelude || true;

# servant-Chart
- JOB_CURR_TIME=$(date +%s)
- JOB_DURR=$((JOB_START_TIME + 4800 - JOB_CURR_TIME))
- echo time to run $JOB_DURR
- if [ $JOB_DURR -lt 60 ]; then echo "Less then minute to go"; JOB_DURR=1; fi
- timeout $JOB_DURR stack +RTS -N2 -RTS --no-terminal --system-ghc --skip-ghc-check build --test --only-snapshot -j2 --ghc-options="-j2 +RTS -M1.5G -A128M -n4m -RTS" servant-Chart || true;

- JOB_CURR_TIME=$(date +%s)
- JOB_DURR=$((JOB_START_TIME + 4800 - JOB_CURR_TIME))
- echo time to run $JOB_DURR
- if [ $JOB_DURR -lt 60 ]; then echo "Less then minute to go"; JOB_DURR=1; fi
- timeout $JOB_DURR stack +RTS -N2 -RTS --no-terminal --system-ghc --skip-ghc-check build --test --only-snapshot -j2 --ghc-options="-j2 +RTS -M1.5G -A128M -n4m -RTS" || true;

script:
- if [ "$PEDANTIC" = "YES" ]; then export STACKOPTS=--pedantic; fi
- JOB_CURR_TIME=$(date +%s)
- JOB_DURR=$((JOB_START_TIME + 4800 - JOB_CURR_TIME))
- echo time to run $JOB_DURR
- if [ $JOB_DURR -lt 60 ]; then echo "Less then minute to go"; JOB_DURR=1; fi
- timeout $JOB_DURR stack +RTS -N2 -RTS --no-terminal --system-ghc --skip-ghc-check build --test $STACKOPTS -j1 --ghc-options="-j2 +RTS -M2G -A128M -n4m -RTS"
  # - stack --no-terminal --skip-ghc-check sdist

matrix:
  fast_finish: true
  include:
  - env: GHCVER=7.10.3 STACK_YAML=stack-ghc-7.10.3.yaml PEDANTIC=YES
    compiler: ghc-7.10.3
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - libfftw3-dev
        - alex-3.1.7
        - happy-1.19.5
        - ghc-7.10.3
        - libgmp-dev
  - env: GHCVER=8.0.2 STACK_YAML=stack-ghc-8.0.2.yaml PEDANTIC=YES
    compiler: ghc-8.0.2
    addons:
      apt:
        sources:
        - hvr-ghc
        packages:
        - libfftw3-dev
        - alex-3.1.7
        - happy-1.19.5
        - ghc-8.0.2
        - libgmp-dev

# Build only master (and PRs to master)
branches:
  only:
  - master
  submodules: false
